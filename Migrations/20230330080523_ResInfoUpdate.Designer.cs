// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RMS.Data;

#nullable disable

namespace RMS.Migrations
{
    [DbContext(typeof(RmsDbContext))]
    [Migration("20230330080523_ResInfoUpdate")]
    partial class ResInfoUpdate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("RMS.Data.ApplicationRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CurrentStatusId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("RMS.Data.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("AccessLevelId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserLogin")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("RMS.Models.AccBankAccounts", b =>
                {
                    b.Property<int>("ABAId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ABAId"), 1L, 1);

                    b.Property<int>("ABAAType")
                        .HasColumnType("int");

                    b.Property<string>("ABABAName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ABABANumber")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ABABAdd")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("ABABCCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ABABName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<double?>("ABAERBal")
                        .HasColumnType("float");

                    b.Property<DateTime>("ABALRDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ACMAccCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.HasKey("ABAId");

                    b.ToTable("AccBankAccounts");
                });

            modelBuilder.Entity("RMS.Models.AccChartClass", b =>
                {
                    b.Property<int>("ACCId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ACCId"), 1L, 1);

                    b.Property<int>("ACCCType")
                        .HasColumnType("int");

                    b.Property<string>("ACCName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("ClassId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ACCId");

                    b.ToTable("AccChartClass");
                });

            modelBuilder.Entity("RMS.Models.AccChartMaster", b =>
                {
                    b.Property<int>("ACMId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ACMId"), 1L, 1);

                    b.Property<int>("ACMAI")
                        .HasColumnType("int");

                    b.Property<string>("ACMAccCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ACMAccName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("ACTId")
                        .HasColumnType("int");

                    b.Property<string>("CUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.HasKey("ACMId");

                    b.HasIndex("ACTId");

                    b.ToTable("AccChartMaster");
                });

            modelBuilder.Entity("RMS.Models.AccChartType", b =>
                {
                    b.Property<int>("ACTId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ACTId"), 1L, 1);

                    b.Property<int?>("ACCId")
                        .HasColumnType("int");

                    b.Property<int>("ACTClassId")
                        .HasColumnType("int");

                    b.Property<string>("ACTName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("ACTParentId")
                        .HasColumnType("int");

                    b.Property<string>("ACTParentName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ACTId");

                    b.HasIndex("ACCId");

                    b.ToTable("AccChartType");
                });

            modelBuilder.Entity("RMS.Models.AccFiscalYear", b =>
                {
                    b.Property<int>("AFYId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AFYId"), 1L, 1);

                    b.Property<DateTime>("AFYBeginDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("AFYClosed")
                        .HasColumnType("int");

                    b.Property<DateTime>("AFYEndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("AFYId");

                    b.ToTable("AccFiscalYear");
                });

            modelBuilder.Entity("RMS.Models.AccGlTrans", b =>
                {
                    b.Property<int>("AGTId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AGTId"), 1L, 1);

                    b.Property<string>("AGTAccCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AGTAccDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("AGTCreditAccount")
                        .HasColumnType("float");

                    b.Property<double?>("AGTDebitAccount")
                        .HasColumnType("float");

                    b.Property<string>("AGTMemo")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("AJTrNo")
                        .HasColumnType("int");

                    b.HasKey("AGTId");

                    b.HasIndex("AJTrNo");

                    b.ToTable("AccGlTrans");
                });

            modelBuilder.Entity("RMS.Models.AccJournal", b =>
                {
                    b.Property<int>("AJId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AJId"), 1L, 1);

                    b.Property<double>("AJAmount")
                        .HasColumnType("float");

                    b.Property<DateTime>("AJDDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("AJEDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("AJMemo")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("AJRef")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("AJRefPrefix")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("AJSoRef")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("AJTrDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("AJType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("AJId");

                    b.ToTable("AccJournal");
                });

            modelBuilder.Entity("RMS.Models.AccPermission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MenuItem")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MenuName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("AccPermission");
                });

            modelBuilder.Entity("RMS.Models.HRDepartment", b =>
                {
                    b.Property<int>("HRDId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HRDId"), 1L, 1);

                    b.Property<string>("HRDDes")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("HRDName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("HRDId");

                    b.ToTable("HRDepartment");
                });

            modelBuilder.Entity("RMS.Models.HRDesignation", b =>
                {
                    b.Property<int>("HRDeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HRDeId"), 1L, 1);

                    b.Property<string>("HRDeDes")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("HRDeName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("HRDeId");

                    b.ToTable("HRDesignation");
                });

            modelBuilder.Entity("RMS.Models.HREmpAtt", b =>
                {
                    b.Property<int>("HREAId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HREAId"), 1L, 1);

                    b.Property<string>("CUser")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("HREADate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("HREAInTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("HREAOutTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("HREATMinute")
                        .HasColumnType("int");

                    b.Property<int>("HREDId")
                        .HasColumnType("int");

                    b.HasKey("HREAId");

                    b.HasIndex("HREDId");

                    b.ToTable("HREmpAtt");
                });

            modelBuilder.Entity("RMS.Models.HREmpDetails", b =>
                {
                    b.Property<int>("HREDId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HREDId"), 1L, 1);

                    b.Property<string>("CUser")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<int>("HRDId")
                        .HasColumnType("int");

                    b.Property<int>("HRDeId")
                        .HasColumnType("int");

                    b.Property<int>("HREDBGroup")
                        .HasColumnType("int");

                    b.Property<float>("HREDBasic")
                        .HasColumnType("real");

                    b.Property<string>("HREDCont")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("HREDEId")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("HREDEName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("HREDEmail")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("HREDFName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<DateTime>("HREDJDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("HREDMStatus")
                        .HasColumnType("int");

                    b.Property<string>("HREDNat")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("HREDPUrl")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("HREDParAdd")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("HREDPreAdd")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("HREDRAdd")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("HREDRef")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("HREDReligion")
                        .HasColumnType("int");

                    b.Property<int?>("HRLeaveDetailHRLDId")
                        .HasColumnType("int");

                    b.Property<int>("HRWSId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsWaiter")
                        .HasColumnType("bit");

                    b.HasKey("HREDId");

                    b.HasIndex("HRDId");

                    b.HasIndex("HRDeId");

                    b.HasIndex("HRLeaveDetailHRLDId");

                    b.HasIndex("HRWSId");

                    b.ToTable("HREmpDetails");
                });

            modelBuilder.Entity("RMS.Models.HREmpRoaster", b =>
                {
                    b.Property<int>("HRERId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HRERId"), 1L, 1);

                    b.Property<string>("CUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("HREDId")
                        .HasColumnType("int");

                    b.Property<DateTime>("HRERFDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("HRERTDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ShiftType")
                        .HasColumnType("int");

                    b.HasKey("HRERId");

                    b.HasIndex("HREDId");

                    b.ToTable("HREmpRoaster");
                });

            modelBuilder.Entity("RMS.Models.HREmpSalary", b =>
                {
                    b.Property<int>("HRSId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HRSId"), 1L, 1);

                    b.Property<string>("CUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("HREDId")
                        .HasColumnType("int");

                    b.Property<double>("HRSBasic")
                        .HasColumnType("float");

                    b.Property<double>("HRSGTotal")
                        .HasColumnType("float");

                    b.Property<int>("HRSMonth")
                        .HasColumnType("int");

                    b.Property<int>("HRSYear")
                        .HasColumnType("int");

                    b.HasKey("HRSId");

                    b.HasIndex("HREDId");

                    b.ToTable("HRSalary");
                });

            modelBuilder.Entity("RMS.Models.HRHolidays", b =>
                {
                    b.Property<int>("HRHId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HRHId"), 1L, 1);

                    b.Property<string>("CUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("HRHEndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("HRHStartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("HolidayType")
                        .HasColumnType("int");

                    b.HasKey("HRHId");

                    b.ToTable("HRHolidays");
                });

            modelBuilder.Entity("RMS.Models.HRLeaveDetail", b =>
                {
                    b.Property<int>("HRLDId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HRLDId"), 1L, 1);

                    b.Property<string>("CUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("HREDId")
                        .HasColumnType("int");

                    b.Property<int>("HREDIdSu")
                        .HasColumnType("int");

                    b.Property<DateTime>("HRLDAppDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("HRLDAppSl")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("HRLDLeaveEDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("HRLDLeaveSDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("HRLDReason")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("HRLDTDay")
                        .HasColumnType("int");

                    b.Property<int>("HRLPId")
                        .HasColumnType("int");

                    b.HasKey("HRLDId");

                    b.HasIndex("HREDId");

                    b.HasIndex("HRLPId");

                    b.ToTable("HRLeaveDetail");
                });

            modelBuilder.Entity("RMS.Models.HRLeavePolicy", b =>
                {
                    b.Property<int>("HRLPId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HRLPId"), 1L, 1);

                    b.Property<string>("CUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("HRLPName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("HRLPTDay")
                        .HasColumnType("int");

                    b.Property<int?>("HRLeaveDetailHRLDId")
                        .HasColumnType("int");

                    b.HasKey("HRLPId");

                    b.HasIndex("HRLeaveDetailHRLDId");

                    b.ToTable("HRLeavePolicy");
                });

            modelBuilder.Entity("RMS.Models.HRSalaryPolicy", b =>
                {
                    b.Property<int>("HRSPId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HRSPId"), 1L, 1);

                    b.Property<int>("ADDUC")
                        .HasColumnType("int");

                    b.Property<string>("CUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("HRSPName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<float?>("HRSPPercent")
                        .HasColumnType("real");

                    b.Property<int>("PerNPer")
                        .HasColumnType("int");

                    b.HasKey("HRSPId");

                    b.ToTable("HRSalaryPolicy");
                });

            modelBuilder.Entity("RMS.Models.HRWeekend", b =>
                {
                    b.Property<int>("HRWId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HRWId"), 1L, 1);

                    b.Property<string>("CUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Weekday")
                        .HasColumnType("int");

                    b.HasKey("HRWId");

                    b.ToTable("HRWeekend");
                });

            modelBuilder.Entity("RMS.Models.HRWStatus", b =>
                {
                    b.Property<int>("HRWSId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HRWSId"), 1L, 1);

                    b.Property<string>("HRWSDes")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("HRWSName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("HRWSId");

                    b.ToTable("HRWStatus");
                });

            modelBuilder.Entity("RMS.Models.Menu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Menu");
                });

            modelBuilder.Entity("RMS.Models.MenuItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("MenuId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MenuId");

                    b.ToTable("MenuItem");
                });

            modelBuilder.Entity("RMS.Models.MenuPermissions", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("MenuId")
                        .HasColumnType("int");

                    b.Property<int?>("MenuItemId")
                        .HasColumnType("int");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("MenuId");

                    b.HasIndex("MenuItemId");

                    b.HasIndex("RoleId");

                    b.ToTable("MenuPermissions");
                });

            modelBuilder.Entity("RMS.Models.ResFoodType", b =>
                {
                    b.Property<int>("RFTId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RFTId"), 1L, 1);

                    b.Property<string>("RFTDescription")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("RFTName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("RFTId");

                    b.ToTable("ResFoodType");
                });

            modelBuilder.Entity("RMS.Models.ResInfo", b =>
                {
                    b.Property<int>("ResId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ResId"), 1L, 1);

                    b.Property<string>("RAddress")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("RCity")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("REmail")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("RPhone")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RPhotoUrl")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("RSCharge")
                        .HasColumnType("int");

                    b.Property<int>("RTax")
                        .HasColumnType("int");

                    b.HasKey("ResId");

                    b.ToTable("ResInfo");
                });

            modelBuilder.Entity("RMS.Models.ResKitchenInfo", b =>
                {
                    b.Property<int>("RKId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RKId"), 1L, 1);

                    b.Property<string>("RKDescription")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("RKitchenName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("RKId");

                    b.ToTable("ResKitchenInfo");
                });

            modelBuilder.Entity("RMS.Models.ResMenu", b =>
                {
                    b.Property<int>("RMId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RMId"), 1L, 1);

                    b.Property<string>("CUser")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("RFTId")
                        .HasColumnType("int");

                    b.Property<int>("RKId")
                        .HasColumnType("int");

                    b.Property<string>("RMItemCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("RMItemName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<double>("RMUPrice")
                        .HasColumnType("float");

                    b.HasKey("RMId");

                    b.HasIndex("RFTId");

                    b.HasIndex("RKId");

                    b.ToTable("ResMenu");
                });

            modelBuilder.Entity("RMS.Models.ResTable", b =>
                {
                    b.Property<int>("RTId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RTId"), 1L, 1);

                    b.Property<string>("CUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RTDescription")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RTNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("RTId");

                    b.ToTable("ResTable");
                });

            modelBuilder.Entity("RMS.Models.RMDetails", b =>
                {
                    b.Property<int>("RMDId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RMDId"), 1L, 1);

                    b.Property<int>("RMDQty")
                        .HasColumnType("int");

                    b.Property<int>("RMMId")
                        .HasColumnType("int");

                    b.Property<float>("SGSUPrice")
                        .HasColumnType("real");

                    b.Property<string>("SIGItemCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SIGItemName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SIGUnit")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("RMDId");

                    b.HasIndex("RMMId");

                    b.ToTable("RMDetails");
                });

            modelBuilder.Entity("RMS.Models.RMMaster", b =>
                {
                    b.Property<int>("RMMId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RMMId"), 1L, 1);

                    b.Property<string>("CUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RMItemCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RMItemName")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("RMMId");

                    b.ToTable("RMMaster");
                });

            modelBuilder.Entity("RMS.Models.StoreCategory", b =>
                {
                    b.Property<int>("SCId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SCId"), 1L, 1);

                    b.Property<string>("CUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SCName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("SCId");

                    b.ToTable("StoreCategory");
                });

            modelBuilder.Entity("RMS.Models.StoreDClose", b =>
                {
                    b.Property<int>("SDCId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SDCId"), 1L, 1);

                    b.Property<string>("CUser")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("SDCDate")
                        .HasColumnType("datetime2");

                    b.HasKey("SDCId");

                    b.ToTable("StoreDClose");
                });

            modelBuilder.Entity("RMS.Models.StoreGIssueDetails", b =>
                {
                    b.Property<int>("GIDId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GIDId"), 1L, 1);

                    b.Property<float>("GIDQty")
                        .HasColumnType("real");

                    b.Property<int>("GIDTPrice")
                        .HasColumnType("int");

                    b.Property<decimal>("GIDUPrice")
                        .HasColumnType("smallmoney");

                    b.Property<int>("GIMId")
                        .HasColumnType("int");

                    b.Property<string>("ItemCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Unit")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GIDId");

                    b.HasIndex("GIMId");

                    b.ToTable("StoreGIssueDetails");
                });

            modelBuilder.Entity("RMS.Models.StoreGIssueMaster", b =>
                {
                    b.Property<int>("GIMId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GIMId"), 1L, 1);

                    b.Property<string>("CUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("GIMDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("GIMRemarks")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("HRDId")
                        .HasColumnType("int");

                    b.HasKey("GIMId");

                    b.HasIndex("HRDId");

                    b.ToTable("StoreGIssueMasters");
                });

            modelBuilder.Entity("RMS.Models.StoreGoodsStock", b =>
                {
                    b.Property<int>("SGSId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SGSId"), 1L, 1);

                    b.Property<string>("ItemCode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ItemName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<float>("SGSQty")
                        .HasColumnType("real");

                    b.Property<int>("SGSTPrice")
                        .HasColumnType("int");

                    b.Property<float>("SGSUPrice")
                        .HasColumnType("real");

                    b.Property<string>("Unit")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SGSId");

                    b.ToTable("StoreGoodsStock");
                });

            modelBuilder.Entity("RMS.Models.StoreGReceiveDetails", b =>
                {
                    b.Property<int>("GRDId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GRDId"), 1L, 1);

                    b.Property<float>("GRDQty")
                        .HasColumnType("real");

                    b.Property<int>("GRDTPrice")
                        .HasColumnType("int");

                    b.Property<decimal>("GRDUPrice")
                        .HasColumnType("smallmoney");

                    b.Property<int>("GRMId")
                        .HasColumnType("int");

                    b.Property<string>("ItemCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Unit")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GRDId");

                    b.HasIndex("GRMId");

                    b.ToTable("StoreGReceiveDetails");
                });

            modelBuilder.Entity("RMS.Models.StoreGReceiveMaster", b =>
                {
                    b.Property<int>("GRMId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GRMId"), 1L, 1);

                    b.Property<string>("CUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("GRMDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("GRMRemarks")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("SSId")
                        .HasColumnType("int");

                    b.HasKey("GRMId");

                    b.HasIndex("SSId");

                    b.ToTable("StoreGReceiveMasters");
                });

            modelBuilder.Entity("RMS.Models.StoreIGen", b =>
                {
                    b.Property<int>("SIGId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SIGId"), 1L, 1);

                    b.Property<string>("CUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("SCId")
                        .HasColumnType("int");

                    b.Property<string>("SIGItemCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SIGItemName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("SIGRLevel")
                        .HasColumnType("int");

                    b.Property<string>("SIGRemarks")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int?>("SSCId")
                        .HasColumnType("int");

                    b.Property<int>("SUId")
                        .HasColumnType("int");

                    b.HasKey("SIGId");

                    b.HasIndex("SCId");

                    b.HasIndex("SSCId");

                    b.HasIndex("SUId");

                    b.ToTable("StoreIGen");
                });

            modelBuilder.Entity("RMS.Models.StoreSCategory", b =>
                {
                    b.Property<int>("SSCId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SSCId"), 1L, 1);

                    b.Property<string>("CUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("SCId")
                        .HasColumnType("int");

                    b.Property<string>("SSCName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("SSCId");

                    b.HasIndex("SCId");

                    b.ToTable("StoreSCategory");
                });

            modelBuilder.Entity("RMS.Models.StoreSuppliers", b =>
                {
                    b.Property<int>("SSId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SSId"), 1L, 1);

                    b.Property<int>("ACMId")
                        .HasColumnType("int");

                    b.Property<string>("CUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SSBName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SSCNumber")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SSCPerson")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("SSEmail")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SSGNotes")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("SSName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SSOAdd")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("SSSName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("SSId");

                    b.HasIndex("ACMId");

                    b.ToTable("StoreSupplier");
                });

            modelBuilder.Entity("RMS.Models.StoreUnit", b =>
                {
                    b.Property<int>("SUId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SUId"), 1L, 1);

                    b.Property<string>("CUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SUName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("SUId");

                    b.ToTable("StoreUnit");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("RMS.Data.ApplicationRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("RMS.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("RMS.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("RMS.Data.ApplicationRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RMS.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("RMS.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RMS.Models.AccChartMaster", b =>
                {
                    b.HasOne("RMS.Models.AccChartType", "AccChartTypes")
                        .WithMany()
                        .HasForeignKey("ACTId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AccChartTypes");
                });

            modelBuilder.Entity("RMS.Models.AccChartType", b =>
                {
                    b.HasOne("RMS.Models.AccChartClass", "AccChartClasss")
                        .WithMany()
                        .HasForeignKey("ACCId");

                    b.Navigation("AccChartClasss");
                });

            modelBuilder.Entity("RMS.Models.AccGlTrans", b =>
                {
                    b.HasOne("RMS.Models.AccJournal", "AccJournal")
                        .WithMany("AccGlTrans")
                        .HasForeignKey("AJTrNo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AccJournal");
                });

            modelBuilder.Entity("RMS.Models.HREmpAtt", b =>
                {
                    b.HasOne("RMS.Models.HREmpDetails", "HREmpDetails")
                        .WithMany()
                        .HasForeignKey("HREDId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HREmpDetails");
                });

            modelBuilder.Entity("RMS.Models.HREmpDetails", b =>
                {
                    b.HasOne("RMS.Models.HRDepartment", "HRDepart")
                        .WithMany()
                        .HasForeignKey("HRDId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RMS.Models.HRDesignation", "HRDesig")
                        .WithMany()
                        .HasForeignKey("HRDeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RMS.Models.HRLeaveDetail", null)
                        .WithMany("HREDEName")
                        .HasForeignKey("HRLeaveDetailHRLDId");

                    b.HasOne("RMS.Models.HRWStatus", "HRWStatus")
                        .WithMany()
                        .HasForeignKey("HRWSId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HRDepart");

                    b.Navigation("HRDesig");

                    b.Navigation("HRWStatus");
                });

            modelBuilder.Entity("RMS.Models.HREmpRoaster", b =>
                {
                    b.HasOne("RMS.Models.HREmpDetails", "HREmpDetails")
                        .WithMany()
                        .HasForeignKey("HREDId");

                    b.Navigation("HREmpDetails");
                });

            modelBuilder.Entity("RMS.Models.HREmpSalary", b =>
                {
                    b.HasOne("RMS.Models.HREmpDetails", "HREmpDetails")
                        .WithMany()
                        .HasForeignKey("HREDId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HREmpDetails");
                });

            modelBuilder.Entity("RMS.Models.HRLeaveDetail", b =>
                {
                    b.HasOne("RMS.Models.HREmpDetails", "HREmpDetails")
                        .WithMany()
                        .HasForeignKey("HREDId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RMS.Models.HRLeavePolicy", "HRLeavePolicy")
                        .WithMany()
                        .HasForeignKey("HRLPId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HREmpDetails");

                    b.Navigation("HRLeavePolicy");
                });

            modelBuilder.Entity("RMS.Models.HRLeavePolicy", b =>
                {
                    b.HasOne("RMS.Models.HRLeaveDetail", null)
                        .WithMany("HRLPName")
                        .HasForeignKey("HRLeaveDetailHRLDId");
                });

            modelBuilder.Entity("RMS.Models.MenuItem", b =>
                {
                    b.HasOne("RMS.Models.Menu", "Menu")
                        .WithMany()
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Menu");
                });

            modelBuilder.Entity("RMS.Models.MenuPermissions", b =>
                {
                    b.HasOne("RMS.Models.Menu", "Menu")
                        .WithMany()
                        .HasForeignKey("MenuId");

                    b.HasOne("RMS.Models.MenuItem", "MenuItem")
                        .WithMany()
                        .HasForeignKey("MenuItemId");

                    b.HasOne("RMS.Data.ApplicationRole", "ApplicationRole")
                        .WithMany()
                        .HasForeignKey("RoleId");

                    b.Navigation("ApplicationRole");

                    b.Navigation("Menu");

                    b.Navigation("MenuItem");
                });

            modelBuilder.Entity("RMS.Models.ResMenu", b =>
                {
                    b.HasOne("RMS.Models.ResFoodType", "ResFtype")
                        .WithMany()
                        .HasForeignKey("RFTId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RMS.Models.ResKitchenInfo", "ResKInfo")
                        .WithMany()
                        .HasForeignKey("RKId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ResFtype");

                    b.Navigation("ResKInfo");
                });

            modelBuilder.Entity("RMS.Models.RMDetails", b =>
                {
                    b.HasOne("RMS.Models.RMMaster", "RMMaster")
                        .WithMany("RMDetails")
                        .HasForeignKey("RMMId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RMMaster");
                });

            modelBuilder.Entity("RMS.Models.StoreGIssueDetails", b =>
                {
                    b.HasOne("RMS.Models.StoreGIssueMaster", "StoreGIssueMaster")
                        .WithMany("StoreGIssueDetails")
                        .HasForeignKey("GIMId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StoreGIssueMaster");
                });

            modelBuilder.Entity("RMS.Models.StoreGIssueMaster", b =>
                {
                    b.HasOne("RMS.Models.HRDepartment", "HRDepart")
                        .WithMany()
                        .HasForeignKey("HRDId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HRDepart");
                });

            modelBuilder.Entity("RMS.Models.StoreGReceiveDetails", b =>
                {
                    b.HasOne("RMS.Models.StoreGReceiveMaster", "StoreGReceiveMaster")
                        .WithMany("StoreGReceiveDetails")
                        .HasForeignKey("GRMId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StoreGReceiveMaster");
                });

            modelBuilder.Entity("RMS.Models.StoreGReceiveMaster", b =>
                {
                    b.HasOne("RMS.Models.StoreSuppliers", "StoreSuppliers")
                        .WithMany()
                        .HasForeignKey("SSId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StoreSuppliers");
                });

            modelBuilder.Entity("RMS.Models.StoreIGen", b =>
                {
                    b.HasOne("RMS.Models.StoreCategory", "StoreCategory")
                        .WithMany()
                        .HasForeignKey("SCId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RMS.Models.StoreSCategory", "StoreSCategory")
                        .WithMany()
                        .HasForeignKey("SSCId");

                    b.HasOne("RMS.Models.StoreUnit", "StoreUnits")
                        .WithMany()
                        .HasForeignKey("SUId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StoreCategory");

                    b.Navigation("StoreSCategory");

                    b.Navigation("StoreUnits");
                });

            modelBuilder.Entity("RMS.Models.StoreSCategory", b =>
                {
                    b.HasOne("RMS.Models.StoreCategory", "StoreCat")
                        .WithMany()
                        .HasForeignKey("SCId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StoreCat");
                });

            modelBuilder.Entity("RMS.Models.StoreSuppliers", b =>
                {
                    b.HasOne("RMS.Models.AccChartMaster", "AccMaster")
                        .WithMany()
                        .HasForeignKey("ACMId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AccMaster");
                });

            modelBuilder.Entity("RMS.Models.AccJournal", b =>
                {
                    b.Navigation("AccGlTrans");
                });

            modelBuilder.Entity("RMS.Models.HRLeaveDetail", b =>
                {
                    b.Navigation("HREDEName");

                    b.Navigation("HRLPName");
                });

            modelBuilder.Entity("RMS.Models.RMMaster", b =>
                {
                    b.Navigation("RMDetails");
                });

            modelBuilder.Entity("RMS.Models.StoreGIssueMaster", b =>
                {
                    b.Navigation("StoreGIssueDetails");
                });

            modelBuilder.Entity("RMS.Models.StoreGReceiveMaster", b =>
                {
                    b.Navigation("StoreGReceiveDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
